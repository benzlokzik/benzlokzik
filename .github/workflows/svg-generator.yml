name: generate snake animation and download images

on:
  # run automatically every 18 hours
  schedule:
    - cron: "0 */18 * * *"
  
  # allows to manually run the job at any time
  workflow_dispatch:
  
  # run on every push on the master branch
  push:
    branches:
      - main

jobs:
  generate-snake:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      # Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Generates a snake game from a GitHub user's contributions graph, outputting an svg animation
      - name: generate github-contribution-grid-snake.svg
        uses: Platane/snk/svg-only@v3.0.0
        id: generate-snake
        with:
          github_user_name: ${{ github.repository_owner }}
          outputs: |
            dist/github-contribution-grid-snake.svg
            dist/github-contribution-grid-snake-dark.svg?palette=github-dark
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true


      # Copy the generated SVGs to the ./img directory in the project root
      - name: Copy SVGs to ./img
        run: |
          mkdir -p ./img
          cp dist/*.svg ./img/

      - name: Upload generated snakes SVGs as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: svg-artifacts
          path: ./img

  download-images:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      # Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Create necessary directories and download images using curl
      - name: Create directories and download images
        id: download-images
        run: |
          mkdir -p ./img/github-stats/monokai
          mkdir -p ./img/github-stats/buefy
          mkdir -p ./img/top-langs/monokai
          mkdir -p ./img/top-langs/buefy
          mkdir -p ./img/streak-stats/monokai
          mkdir -p ./img/streak-stats/buefy
          
          BASE_URL_STATS="https://github-readme-stats-benzlokzik.vercel.app/api"
          PARAMS_STATS="?username=benzlokzik"
          PARAMS_STATS="${PARAMS_STATS}&show_icons=true"
          PARAMS_STATS="${PARAMS_STATS}&include_all_commits=true"
          PARAMS_STATS="${PARAMS_STATS}&show=reviews,discussions_started,discussions_answered,prs_merged,prs_merged_percentage"
          PARAMS_STATS="${PARAMS_STATS}&hide_border=true"

          # Download the stats SVGs
          curl -s -o./img/github-stats/monokai/github-readme-stats-monokai.svg "${BASE_URL_STATS}${PARAMS_STATS}&theme=monokai"
          curl -s -o./img/github-stats/buefy/github-readme-stats-buefy.svg "${BASE_URL_STATS}${PARAMS_STATS}&theme=buefy"

          BASE_URL_LANGS="https://github-readme-stats-benzlokzik.vercel.app/api/top-langs/"
          PARAMS_LANGS="?username=benzlokzik"
          PARAMS_LANGS="${PARAMS_LANGS}&layout=compact"
          PARAMS_LANGS="${PARAMS_LANGS}&langs_count=12"
          PARAMS_LANGS="${PARAMS_LANGS}&hide_border=true"

          # Download the top-langs SVGs
          curl -s -o./img/top-langs/monokai/github-top-langs-monokai.svg "${BASE_URL_LANGS}${PARAMS_LANGS}&theme=monokai"
          curl -s -o./img/top-langs/buefy/github-top-langs-buefy.svg "${BASE_URL_LANGS}${PARAMS_LANGS}&theme=buefy"

          BASE_URL_STREAK="https://streak-stats.demolab.com"
          USER="benzlokzik"
          HIDE_BORDER="&hide_border=true"

          # Download the streak-stats SVGs
          curl -s -o./img/streak-stats/monokai/streak-stats-monokai-weekly.svg "${BASE_URL_STREAK}?user=${USER}&theme=monokai${HIDE_BORDER}&mode=weekly"
          curl -s -o./img/streak-stats/buefy/streak-stats-buefy-weekly.svg "${BASE_URL_STREAK}?user=${USER}&theme=buefy${HIDE_BORDER}&mode=weekly"
          curl -s -o./img/streak-stats/monokai/streak-stats-monokai-ru-weekly.svg "${BASE_URL_STREAK}?user=${USER}&theme=monokai${HIDE_BORDER}&locale=ru&mode=weekly"
          curl -s -o./img/streak-stats/buefy/streak-stats-buefy-ru-weekly.svg "${BASE_URL_STREAK}?user=${USER}&theme=buefy${HIDE_BORDER}&locale=ru&mode=weekly"
          curl -s -o./img/streak-stats/monokai/streak-stats-monokai.svg "${BASE_URL_STREAK}?user=${USER}&theme=monokai${HIDE_BORDER}"
          curl -s -o./img/streak-stats/buefy/streak-stats-buefy.svg "${BASE_URL_STREAK}?user=${USER}&theme=buefy${HIDE_BORDER}"
          curl -s -o./img/streak-stats/monokai/streak-stats-monokai-hy.svg "${BASE_URL_STREAK}?user=${USER}&theme=monokai${HIDE_BORDER}&locale=hy"
          curl -s -o./img/streak-stats/buefy/streak-stats-buefy-hy.svg "${BASE_URL_STREAK}?user=${USER}&theme=buefy${HIDE_BORDER}&locale=hy"

        continue-on-error: true

      - name: Upload downloaded SVGs as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: svg-artifacts
          path: ./img

  commit-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [generate-snake, download-images]  # This job depends on the completion of the previous two jobs
    if: |
      always()

    steps:
      # Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download SVGs from artifacts
        uses: actions/download-artifact@v2
        with:
          name: svg-artifacts
          path: ./img

      # Commit and push the SVGs to the repository
      - name: Commit and push SVGs
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add ./img/
          git commit -m "Update SVGs in \`./img\` at \`$(date +"%Y-%m-%d %H:%M:%S")\`" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
